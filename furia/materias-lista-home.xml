<?xml version="1.0" encoding="UTF-8"?>
<root>
    <secao>
        <nome>html-css</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Onde tudo começou</titulo>
                    <url>html-css/basico/onde-tudo-comecou</url>
                    <pasta>html-css/basico/onde-tudo-comecou/</pasta>
                    <resumo>Tim Berners-Lee, a culpa é toda dele. No começo dos anos 90, o dito cujo, inventou o HTML (HyperText Markup Language) que significa Linguagem de Marcação de Hipertexto. Ele queria facilitar a comunicação de suas pesquisas com seus colegas e acabou resolvendo o problema de todo mundo, nascia a web.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>23/01/2013</dt_criacao>
                    <dt_atualizacao>11/02/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>HTML e CSS - Introdução</titulo>
                    <url>html-css/basico/html-e-css-intro/</url>
                    <pasta>html-css/basico/html-e-css-intro/</pasta>
                    <resumo>Vamos dar uma rápida olhada nas tag's básicas e uma "passeada" com o CSS.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>23/01/2013</dt_criacao>
                    <dt_atualizacao>11/02/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Elementos in-line e elementos block-level</titulo>
                    <url>html-css/basico/elementos-inline-block-level/</url>
                    <pasta>html-css/basico/elementos-inline-block-level/</pasta>
                    <resumo> Há dois tipos básicos de tag's: as in-line e de block-level. A diferênça básica é que o browser acomoda os elementos inline à esquerda um ao lado do outro e as de bloco ele coloca uma embaixo da outra ocupando a tela toda. Veja o HTML abaixo para *entender* e clique no [link](code1.html "Veja a pagina em funcionamento") para *perceber* como ele foi reenderizado.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>23/01/2013</dt_criacao>
                    <dt_atualizacao>11/02/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Criando nosso primeiro HTML [com vídeo]</titulo>
                    <url>html-css/basico/primeiro-html/</url>
                    <pasta>html-css/basico/primeiro-html/</pasta>
                    <resumo>O site www.csszengarden.com é notório por seus esforços em promover e divulgar o poder do CSS unido a um bom HTML. Ele tráz uma proposta interessante: criaram um HTML básico, porém bem formado, válido e desafiaram designers solcitando que o estilizassem sem "tocar" no HTML. Em outras palavras, o designer poderá utilizar o tema/estilo que quiser, mas não poderá jamais alterar o HTML e sua estrutura </resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>12/04/2013</dt_criacao>
                    <dt_atualizacao>12/04/2013</dt_atualizacao>
                </materia>
            </basico>
        </nivel>
    </secao>
    <secao>
        <nome>js</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Introdução</titulo>
                    <url>js/basico/intro</url>
                    <pasta>js/basico/onde-tudo-comecou/</pasta>
                    <resumo>JavaScript(JS) não é brinquedo, é linguagem de programação séria. Das mil definições de JS a que mais me agrada é a de Kevin e Cameron em seu livro Simple JavaScript (Só JavaScript) 'JavaScript é uma linguagem de programação simples que permite alterar páginas web dinamicamente, enquanto estão sendo exibidas em um navegador.'. </resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>08/10/2012</dt_criacao>
                    <dt_atualizacao>08/11/2012</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Preparando o terreno</titulo>
                    <url>js/basico/preparando-o-terreno</url>
                    <pasta>js/basico/preparando-o-terreno/</pasta>
                    <resumo>Na matéria de introdução eu comentei que vamos aprender JS junto com HTML e CSS. Na verdade vamos aprender as coisas separadamente, porém vamos trabalhar com os três elementos como se fosse ingredientes obrigatórios em cada receita. Neste ponto é importante entendermos a obrigação de cada um desses componentes. O JS será encarregado do comportamento da página, da interação com o usuário, dos enventos possíveis (click, duplo click, teclado, movimentação do mouse, e etc...), de tudo aquilo que pode beneficinar a interface do sistema.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>08/10/2012</dt_criacao>
                    <dt_atualizacao>08/11/2012</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Debugando (depurando) [com vídeo]</titulo>
                    <url>js/basico/debugando/</url>
                    <pasta>js/basico/debugando/</pasta>
                    <resumo>"Precisamos debugar o programa para sabermos onde [e como] está ocorrendo o erro". Essa frase faz parte do dia a dia do desenvolvedor e, não raro, ela tira o sono de muita gente.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>10/04/2013</dt_criacao>
                    <dt_atualizacao>30/04/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Code - A Lâmpada</titulo>
                    <url>js/basico/code-lampadas/</url>
                    <pasta>js/basico/code-lampadas/</pasta>
                    <resumo>Vamos revisitar o pequeno código da lámpada que vimos na primeira matéria de JS. Primeiro, não posso deixar de comentar que programar no lado cliente é uma tarefa que exige muita criatividade. Esse exemplo ilustra bem isso. O objetivo do script é dar a sensação de que estamos apagando e acendendo uma lâmpada.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/07/2013</dt_criacao>
                    <dt_atualizacao>05/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Code - A Lâmpada (refatorando)</titulo>
                    <url>js/basico/code-lampadas-refatorando/</url>
                    <pasta>js/basico/code-lampadas-refatorando/</pasta>
                    <resumo>Quando escrevemos um código e, posteriomente, voltamos para ajustar algumas coisas, estamos praticando o refactoring. Quero dizer, estamos refatorando o código. O conceito intuitivo da palavra traz consigo a idéia de que "refatorar" é simplificar uma expressão. Não é isso o que vem a sua mente ?.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>08/07/2013</dt_criacao>
                    <dt_atualizacao>08/07/2013</dt_atualizacao>
                </materia>
            </basico>
        </nivel>
    </secao>
    <secao>
        <nome>php</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Um bom começo</titulo>
                    <url>php/basico/um-bom-comeco</url>
                    <pasta>php/basico/um-bom-comeco/</pasta>
                    <resumo>PHP é uma linguagem de programação para uso geral. Inicialmente, projetada por Rasmus Lerdorf na década de 1990, tinha como objetivo principal contar as visitas que eram realizadas em seu currículo on-line. Atualmente (2012) é utilizada, principalmente para construir aplicações web. Entende-se por aplicações web (às vezes abreviado para “webapp” ou simplesmente “app´s”) programas ou softwares escritos para rodarem na plataforma web, no modelo cliente/servidor...</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/09/2012</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Antes de enfiar o pé na jáca</titulo>
                    <url>php/basico/antes-de-enfiar-o-pe-na-jaca/</url>
                    <pasta>php/basico/antes-de-enfiar-o-pe-na-jaca/</pasta>
                    <resumo>A questão é que o PHP é fácil demais. o que incentiva a implementar suas idéias, retornando, assim, bons resultados. Algumas dessas facilidades são a possibilidade de digitar grande parte de seu código diretamente em suas páginas da Web, adicionar funções úteis (como um código de acesso a banco de dados) a arquivos, incluindo-as de página em página e, antes de se dar conta, você já tem um aplicativo Web em execução. </resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/09/2012</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Instalando o ambiente no estilo NEXT, NEXT, NEXT</titulo>
                    <url>php/basico/instalando-o-ambiente/</url>
                    <pasta>php/basico/instalando-o-ambiente/</pasta>
                    <resumo>Todo programador precisa saber “levantar” seu próprio ambiente de trabalho, me refiro a instalar os programas necessários para começar o desenvolvimento. Inclua na lista: o servidor web(apache), o módulo PHP, o banco de dados, a API (interface) do banco de dados, o editor de código, o controlador de versão, a escolha do sistema operacional, etc... Após instalado os componentes, devemos configurar cada um deles. </resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/09/2012</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Debugando (depurando)</titulo>
                    <url>php/basico/debugando/</url>
                    <pasta>php/basico/debugando/</pasta>
                    <resumo>Debugar é um esforço para encontrar determinado ponto (às vezes vários pontos) "defeituoso" no código para que seja corrigido.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>10/04/2013</dt_criacao>
                    <dt_atualizacao>10/04/2013</dt_atualizacao>
                </materia>
            </basico>
        </nivel>
    </secao>
    <secao>
        <nome>mysql</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Introdução</titulo>
                    <url>mysql/basico/intro/</url>
                    <pasta>mysql/basico/introducao/</pasta>
                    <resumo>Na década de 70 um pesquizador chamado Edgar Frank "Ted" Codd desenvolveu um produto de modelo de dado relacional chamado SEQUEL (Strutucred English Query Language, Linguagem de Consulta em Inglês Estruturado) que mais tarde veio a se tornar o nosso conhecido SQL (Structured Query Language, Linguagem de Consulta Estruturada).</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>26/07/2013</dt_criacao>
                    <dt_atualizacao>26/07/2013</dt_atualizacao>
                </materia>                
            </basico>
        </nivel>
    </secao>
    <secao>
        <nome>regexp</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Introdução</titulo>
                    <url>regexp/basico/intro</url>
                    <pasta>regexp/basico/intro/</pasta>
                    <resumo>Expressões Regulares é uma técnica para procurar, de forma bem específica, um texto abrangente.OK, essa não é a definição formal de ER, é apenas uma variação da resposta encontrada por Aurélio Marinho para a seguinte pergunta: Para que servem ? Basicamente, servem para você dizer algo abrangente de forma específica.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>preg_match()</titulo>
                    <url>regexp/basico/preg-match</url>
                    <pasta>regexp/basico/preg-match/</pasta>
                    <resumo>A função preg_match() refere-se a versão PCRE, versão compatível com PHP 5.3. Para iniciarmos vamos utilizar o exemplo básico da matéria de introdução.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>string.match()</titulo>
                    <url>regexp/basico/string-match</url>
                    <pasta>regexp/basico/string-match/</pasta>
                    <resumo>Em JS temos a forma string.match() onde "string" é a variável contendo a sua string e "match()" é a função que evocamos para executar a ER.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>pattern.test()</titulo>
                    <url>regexp/basico/pattern-test</url>
                    <pasta>regexp/basico/pattern-test/</pasta>
                    <resumo>Em JS também temos a forma pattern.test() onde "pattern" é expressão regular, "test()" é a função que evocamos para executar a ER e o parâmetro 'string passado na função é a nosso texto de pesquisa (assunto).</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>pattern.exec()</titulo>
                    <url>regexp/basico/pattern-exec</url>
                    <pasta>regexp/basico/pattern-exec/</pasta>
                    <resumo>A função exec() em JS possue a sintaxe parecida com a função test() porém o resultado é idêntico a função match().</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>new RegExp()</titulo>
                    <url>regexp/basico/new-regexp</url>
                    <pasta>regexp/basico/new-regexp/</pasta>
                    <resumo>Utilizando-se do construtor RegExp() podemos compilar a expressão regular antes de usá-la. Isso é uma vantagem? Não exatamente.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>ponto</titulo>
                    <url>regexp/basico/ponto</url>
                    <pasta>regexp/basico/ponto/</pasta>
                    <resumo>O ponto casa com qualquer caracter inclusive com as quebras de linhas (\r e \n).O ponto também casa com ele próprio.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Vários resultados - preg_match_all()</titulo>
                    <url>regexp/basico/varios-resultados-preg-match-all</url>
                    <pasta>regexp/basico/varios-resultados-preg-match-all/</pasta>
                    <resumo>Exemplos da função perg_match_all() em PHP.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Vários resultados - match(), test() e exec()</titulo>
                    <url>regexp/basico/varios-resultados-match-test-exec</url>
                    <pasta>regexp/basico/varios-resultados-match-test-exec/</pasta>
                    <resumo>Exemplos das funções match(), test() e exec() em JS.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>22/07/2013</dt_criacao>
                    <dt_atualizacao>22/07/2013</dt_atualizacao>
                </materia>                                
            </basico>
        </nivel>
    </secao>
    <secao>
        <nome>logica</nome>
        <nivel>
            <basico>
                <materia>
                    <titulo>Introdução</titulo>
                    <url>logica/basico/intro</url>
                    <pasta>logica/basico/intro/</pasta>
                    <resumo>A lógica de programação é um exercício mental. Ela equivale aos exercícios físicos e todo programador deve praticar, não apenas no início do aprendizado mas no decorrer de toda a “estrada”. Programar um computador é uma atividade, antes de tudo, criativa. Quando a criatividade se une com o raciocínio lógico temos a lógica de programação. E programar nada mais é do que instruir o computador a resolver problemas... usando a lógica de forma criativa.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>25/07/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 01</titulo>
                    <url>logica/basico/exercicio01/</url>
                    <pasta>logica/basico/exercicio01/</pasta>
                    <resumo>Escreva um algoritmo que mostre a área quadrada de um espaço qualquer (os valores desse espaço são atribuídos arbitrariamente pelo programador).</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 02</titulo>
                    <url>logica/basico/exercicio02/</url>
                    <pasta>logica/basico/exercicio02/</pasta>
                    <resumo>Escreva um algoritmo que mostre a área quadrada de um espaço qualquer (os valores desse espaço são atribuídos arbitrariamente pelo programador).</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 03</titulo>
                    <url>logica/basico/exercicio03/</url>
                    <pasta>logica/basico/exercicio03/</pasta>
                    <resumo>Faça um programa que mostra a média simples (aritmética) de 3 valores quaisquer.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 04</titulo>
                    <url>logica/basico/exercicio04/</url>
                    <pasta>logica/basico/exercicio04/</pasta>
                    <resumo>Sendo o número total de eleitores de um município = 25.639, o número de votos brancos = 1507, nulos = 2312 e válidos = 21.820. Calcular e escrever o percentual que cada um representa em relação ao total de eleitores.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 05</titulo>
                    <url>logica/basico/exercicio05/</url>
                    <pasta>logica/basico/exercicio05/</pasta>
                    <resumo>Faça um algoritmo que mostre e calcule o reajuste de um salário qualquer. O salário e o reajuste serão valores quaisquer e a saída mostrará o valor do reajuste e o salário reajustado.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 06</titulo>
                    <url>logica/basico/exercicio06/</url>
                    <pasta>logica/basico/exercicio06/</pasta>
                    <resumo>Calcular o total de dias de n meses, considerando que os meses tenham 30 dias.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 07</titulo>
                    <url>logica/basico/exercicio07/</url>
                    <pasta>logica/basico/exercicio07/</pasta>
                    <resumo>aça um algoritmo, sendo a data de nascimento um valor qualquer, que expresse a idade de uma pessoa em dias.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 08</titulo>
                    <url>logica/basico/exercicio08/</url>
                    <pasta>logica/basico/exercicio08/</pasta>
                    <resumo>O custo de um carro novo ao consumidor é a soma do custo de fábrica com a porcentagem do distribuidor e dos impostos
(aplicados ao custo de fábrica). Supondo que o percentual do distribuidor seja de 28% e os impostos de 45%, escreva um
algoritmo para calcular e escrever o custo final ao consumidor. Como custo de fábrica utilize um valor arbitrário,
por exemplo, 20.000.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 09</titulo>
                    <url>logica/basico/exercicio09/</url>
                    <pasta>logica/basico/exercicio09/</pasta>
                    <resumo>Escreva um algoritmo para mostrar o sucessor e o antecessor de um número qualquer.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
                <materia>
                    <titulo>Exercício 10</titulo>
                    <url>logica/basico/exercicio10/</url>
                    <pasta>logica/basico/exercicio10/</pasta>
                    <resumo>Calcular o juros simples produzido pelo empréstimo de R$ 16.000,00 sobre a taxa de 4% durante 4 meses.</resumo>
                    <autor>Flávio Micheletti</autor>
                    <dt_criacao>05/06/2012</dt_criacao>
                    <dt_atualizacao>11/08/2013</dt_atualizacao>
                </materia>
            </basico>
        </nivel>
    </secao>
</root>
